#pragma once

/**
 * This file defines a blacklist of standard includes for the GNU libc and libstdc++
 * so no incompatible definitions are imported into OpenCL code.
 */
#include <unordered_map>
std::unordered_map<std::string, bool> headerBlacklist
	({
		 {"cuda_types.h", true}, /// So we don't import that twice
		 {"string_conversions.h", true},
		 {"stl_function.h", true},
		 {"istream.tcc", true},
		 {"istream", true},
		 {"ostream", true},
		 {"math.h", true},
		 {"basic_ios.tcc", true},
		 {"basic_ios.h", true},
		 {"locale_facets.tcc", true},
		 {"locale_facets.h", true},
		 {"type_traits", true},
		 {"ratio", true},
		 {"limits", true},
		 {"time.h", true},
		 {"timex.h", true},
		 {"time.h", true},
		 {"xlocale.h", true},
		 {"parse_numbers.h", true},
		 {"chrono", true},
		 {"cuda_runtime.h", true},
		 {"memoryfwd.h", true},
		 {"stringfwd.h", true},
		 {"stdio.h", true},
		 {"wchar.h", true},
		 {"postypes.h", true},
		 {"iosfwd", true},
		 {"exception", true},
		 {"exception_ptr.h", true},
		 {"move.h", true},
		 {"nested_exception.h", true},
		 {"cpp_type_traits.h", true},
		 {"type_traits.h", true},
		 {"numeric_traits.h", true},
		 {"stl_pair.h", true},
		 {"stl_iterator_base_types.h", true},
		 {"stl_iterator_base_funcs.h", true},
		 {"ptr_traits.h", true},
		 {"stl_iterator.h", true},
		 {"predefined_ops.h", true},
		 {"stl_algobase.h", true},
		 {"char_traits.h", true},
		 {"locale.h", true},
		 {"localefwd.h", true},
		 {"sched.h", true},
		 {"pthreadtypes.h", true},
		 {"pthread.h", true},
		 {"new", true},
		 {"new_allocator.h", true},
		 {"allocator.h", true},
		 {"cxxabi_forced.h", true},
		 {"binders.h", true},
		 {"initializer_list", true},
		 {"range_access.h", true},
		 {"alloc_traits.h", true},
		 {"basic_string.h", true},
		 {"stdlib.h", true},
		 {"sigset.h", true},
		 {"select.h", true},
		 {"stdlib.h", true},
		 {"_G_config.h", true},
		 {"libio.h", true},
		 {"stdio.h", true},
		 {"functional_hash.h", true},
		 {"functional_hash.h", true},
		 {"basic_string.h", true},
		 {"basic_string.tcc", true},
		 {"locale_classes.h", true},
		 {"locale_classes.tcc", true},
		 {"stdexcept", true},
		 {"system_error", true},
		 {"ios_base.h", true},
		 {"streambuf", true},
		 {"streambuf.tcc", true},
		 {"ctype_base.h", true},
		 {"streambuf_iterator.h", true},
		 {"ostream.tcc", true},
		 {"cmath", true},
		 {"errno.h", true},
		 {"mathdef.h", true},
		 {"wctype.h", true},
		 {"ostream_insert.h", true},
		 {"atomic_word.h", true},
		 {"gthr-default.h", true},
		 {"ostream.tcc", true},
		 {"c++locale.h", true},
		 {"stddef.h", true},
		 {"stdarg.h", true},
		 {"stdint.h", true},
		 {"c++config.h", true},
		 {"setjmp.h", true},
		 {"memory", true},
		 {"uses_allocator.h", true},
		 {"tuple", true},
		 {"unique_ptr.h", true},
		 {"shared_ptr.h", true},
		 {"atomic_base.h", true},
		 {"algorithmfwd.h", true},
		 {"c++config.h", true},
		 {"typeinfo", true},
		 {"stl_construct.h", true},
		 {"stl_uninitialized.h", true},
		 {"stl_tempbuf.h", true},
		 {"stl_raw_storage_iter.h", true},
		 {"concurrence.h", true},
		 {"utility", true},
		 {"array", true},
		 {"functional", true},
		 {"shared_ptr_base.h", true},
		 {"aligned_buffer.h", true},
		 {"shared_ptr_atomic.h", true},
		 {"auto_ptr.h", true},
		 {"locale_facets_nonio.h", true},
		 {"codecvt.h", true},
		 {"locale_conv.h", true},
		 {"sstream", true},
		 {"sstream.tcc", true},
		 {"quoted_string.h", true},
		 {"iomanip", true},
		 {"stl_heap.h", true},
		 {"uniform_int_dist.h", true},
		 {"stl_algo.h", true},
		 {"allocated_ptr.h", true},
		 {"locale_facets_nonio.tcc", true},
		 {"types.h", true},
		 {"string", true},
		 {"basic_file.h", true},
		 {"fstream", true},
		 {"fstream.tcc", true},
		 {"stl_vector.h", true},
		 {"stl_bvector.h", true},
		 {"c++io.h", true},
		 {"error_constants.h", true},
		 {"ctype.h", true},
		 {"assert.h", true},
		 {"getopt.h", true},
		 {"unistd.h", true},
		 {"confname.h", true}
	 });
