# - Config file for the CudaLibre package
# It defines the following variables
#  CudaLibre_INCLUDE_DIRS - include directories for FooBar
#  CudaLibre_LIBRARIES    - libraries to link against
#  CLCC_EXECUTABLE   - the CudaLibre compiler executable
 
# Compute paths
get_filename_component(CUDALIBRE_CMAKE_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
set(CudaLibre_INCLUDE_DIRS "@CMAKE_INSTALL_PREFIX@/include/cudalibre")
 
# Our library dependencies (contains definitions for IMPORTED targets)
if(NOT TARGET clcc AND NOT CudaLibre_BINARY_DIR)
  include("${CUDALIBRE_CMAKE_DIR}/CudaLibreTargets.cmake")
endif()
 
# These are IMPORTED targets created by CudaLibreTargets.cmake
set(CudaLibre_LIBRARIES clruntime)
set(CLCC_EXECUTABLE clcc)

find_package(OpenCL REQUIRED)

macro(cuda_add_executable name)
    set(_SOURCELIST "")
    set(_CUDA_DEPS "")
    foreach(arg ${ARGN})

        string(FIND ${arg} ".cu" _CU_POS REVERSE)
        string(LENGTH ${arg} _CU_LEN)

        if(${_CU_POS} STREQUAL -1)
            list(APPEND _SOURCELIST ${arg})
        else()
            math(EXPR _CU_POS "(${_CU_LEN})-(${_CU_POS})")
            if(${_CU_POS} STREQUAL 3)
                add_custom_target(${arg}_clcc ALL COMMAND ${CLCC_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/${arg} ${CMAKE_CURRENT_BINARY_DIR}/${arg}.cpp)
                execute_process(COMMAND ${CLCC_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/${arg} ${CMAKE_CURRENT_BINARY_DIR}/${arg}.cpp)

                list(APPEND _SOURCELIST ${CMAKE_CURRENT_BINARY_DIR}/${arg}.cpp)
                list(APPEND _CUDA_DEPS ${arg}_clcc)
            endif()
        endif(${_CU_POS} STREQUAL -1)
    endforeach()

    add_executable(${name} ${_SOURCELIST})

    if(_CUDA_DEPS)
        add_dependencies(${name} ${_CUDA_DEPS})
    endif()

    target_link_libraries(${name} ${CudaLibre_LIBRARIES} ${OpenCL_LIBRARIES})
    target_include_directories(${name} PUBLIC ${CudaLibre_INCLUDE_DIRS} ${CMAKE_CURRENT_SOURCE_DIR})
endmacro()
